apiVersion: apps/v1
kind: Deployment
metadata:
  name: shahnameh
  labels:
    app: shahnameh-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: shahnameh-backend
  template:
    metadata:
      labels:
        app: shahnameh-backend
    spec:
      containers:
        - name: shahnameh-backend
          image: ghcr.io/ashkann/shahnameh-backend
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
            failureThreshold: 1
            periodSeconds: 10
          startupProbe:
            httpGet:
              path: /healthz
              port: 8080
            failureThreshold: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8080
            failureThreshold: 30
            periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: shahnameh-backend
spec:
  selector:
    app: shahnameh-backend
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: shahnameh-ingress
  annotations:
    kubernetes.io/ingress.class: "gce"
spec:
  rules:
    - http:
        paths:
          - path: /*
            pathType: ImplementationSpecific
            backend:
              service:
                name: shahnameh-backend
                port:
                  number: 80
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 30Gi
---
apiVersion: v1
kind: Secret
metadata:
  name: postgres
type: kubernetes.io/basic-auth
stringData:
  username: shahnameh
  password: shahnameh
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:13.4-alpine
          env:
            - name: POSTGRES_PASSWORD
              value: "ashkan"
            - name: PGDATA
              value: "/var/lib/postgresql/data/pgdata"
          volumeMounts:
            - mountPath: "/var/lib/postgresql/data"
              name: postgres
      volumes:
        - name: postgres
          persistentVolumeClaim:
            claimName: postgres